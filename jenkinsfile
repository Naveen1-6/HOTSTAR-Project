pipeline {
    agent any

    environment {
        DOCKER_USER     = "kranthi6166"            // ✅ your DockerHub username
        IMAGE_NAME      = "java-project-maven-new" // ✅ project image name
        IMAGE_TAG       = "latest"
        CONTAINER_NAME  = "HOTSTAR-CONTAINER"
    }

    stages {
        stage('Checkout Code') {
            steps {
                git branch: 'main', url: 'https://github.com/Naveen1-6/HOTSTAR-Project.git'
            }
        }

        stage('Build App') {
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                    echo "Building Docker image..."
                    docker build -t ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG} .
                '''
            }
        }

        stage('Run Container (Local Test)') {
            steps {
                sh '''
                    echo "Running container locally..."
                    docker rm -f ${CONTAINER_NAME} || true
                    docker run -d --name ${CONTAINER_NAME} -p 8085:8080 ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                    sleep 5
                    docker logs ${CONTAINER_NAME}
                '''
            }
        }

        stage('Push Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'dockerhub_creds', usernameVariable: 'DOCKER_HUB_USER', passwordVariable: 'DOCKER_HUB_PASS')]) {
                    sh '''
                        echo "Logging in to DockerHub..."
                        echo "$DOCKER_HUB_PASS" | docker login -u "$DOCKER_HUB_USER" --password-stdin
                        docker tag ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG} ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                        docker push ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                    '''
                }
            }
        }

        stage('Deploy to Docker Swarm') {
            steps {
                sh '''
                    echo "Deploying to Docker Swarm..."
                    docker service rm hotstar-service || true
                    docker service create \
                        --name hotstar-service \
                        --publish 8085:8080 \
                        --replicas 3 \
                        ${DOCKER_USER}/${IMAGE_NAME}:${IMAGE_TAG}
                '''
            }
        }
    }
}
